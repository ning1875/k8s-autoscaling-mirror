#=================================================
# https://github.com/zhangsean/k8s-autoscaler-mirror
# Description: Auto check latest autoscaler release and tag docker image zhangsean/autoscaler/ using GitHub Actions
# License: Apache V2.0
# Author: ZhangSean
#=================================================

name: Follow up autoscaler release

on:
  schedule:
    - cron: 1 0 * * *
  watch:
    types: [started]
    if: github.event.repository.owner.id == github.event.sender.id
  push:
    paths:
      - '.github/workflows/*.yml'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Check new release
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          git fetch --tags
          export CURRENT=$(cat vpa-updater.Dockerfile | awk -F: '{print $2}')
          echo "CURRENT=$CURRENT"
          export LATEST=$(curl -L https://github.com/kubernetes/autoscaler/raw/master/vertical-pod-autoscaler/deploy/updater-deployment.yaml | sed -n '/image/s/.*vpa-updater:\(.*\)/\1/p')
          echo "LATEST=$LATEST"
          if [ "$LATEST" != "$CURRENT" ]; then
            echo "New autoscaler released: $LATEST"
            echo "CURRENT=$CURRENT" >> $GITHUB_ENV
            echo "LATEST=$LATEST" >> $GITHUB_ENV
          else
            echo "No new autoscaler released"
            echo "LATEST=" >> $GITHUB_ENV
          fi

      - name: Bump to new tag
        if: success() && env.CURRENT != '' && env.LATEST != ''
        env:
          DEBIAN_FRONTEND: noninteractive
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Changing tag from $CURRENT to $LATEST"
          sed -i "s/$CURRENT/$LATEST/g" README.md
          sed -i "s/$CURRENT/$LATEST/g" *.Dockerfile
          git config user.email zxf2342@qq.com
          git config user.name zhangsean
          git commit -a -m "Bump to autoscaler $LATEST"
          git push

      - name: Create new release
        uses: actions/create-release@v1
        if: success() && env.CURRENT != '' && env.LATEST != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST }}
          release_name: ${{ env.LATEST }}
          body: |
            Bump to autoscaler ${{ env.LATEST }}
          draft: false
          prerelease: false

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: success() && env.LATEST != ''
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: success() && env.LATEST != ''
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        if: success() && env.LATEST != ''
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push vpa-admission-controller
        uses: docker/build-push-action@v2
        if: success() && env.LATEST != ''
        with:
          context: .
          file: vpa-admission-controller.Dockerfile
          push: true
          tags: |
            zhangsean/vpa-admission-controller:latest,
            zhangsean/vpa-admission-controller:${{ env.LATEST }}
      -
        name: Build and push vpa-recommender
        uses: docker/build-push-action@v2
        if: success() && env.LATEST != ''
        with:
          context: .
          file: vpa-recommender.Dockerfile
          push: true
          tags: |
            zhangsean/vpa-recommender:latest,
            zhangsean/vpa-recommender:${{ env.LATEST }}
      -
        name: Build and push vpa-updater
        uses: docker/build-push-action@v2
        if: success() && env.LATEST != ''
        with:
          context: .
          file: vpa-updater.Dockerfile
          push: true
          tags: |
            zhangsean/vpa-updater:latest,
            zhangsean/vpa-updater:${{ env.LATEST }}
